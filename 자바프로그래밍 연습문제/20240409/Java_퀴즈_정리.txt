java 1주차 

1. JDK와 JRE 차이점을 설명한 것이다. 틀린것은?
	-JRE는 자바 컴파일러를 포함한다. (포함하지 않음)
	-JDK는 JRE를 포함한다.
	-자바 프로그램을 개발하려면 JDK가 필요하다.
	-JRE는 자바가상머신을 포함하므로 자바 프로그램을 실행할 수 있다.

2. 자바 컴파일러는 프로그램을 바이트코드로 변환하여 JVM으로 보내는데, 바이트코드는 어떤 확장 파일로 저장되는가?
	-.exe
	-.class(.class확장자로 저장됨!!)
	-.java
	-.docx

3. 인간이 이해하는 고급언어를 CPU가 이해하는 기계어로 바꾸어 주는 시스템 SW를 모두 고르시오.
	-Operating System
	-Compiler		(정답)
	-Runtime
	-Interpreter		(정답)

4. 다음 중 프로그래밍 언어가 아닌 것은?
	-C++
	-Java
	-HTML			(정답)
	-Javascript

5. 소스 코드 전체를 기계어로 변환 후 실행 파일을 만드는 언어를 무엇이라고 하는가? - 전체를 기계어로 변환후 실행파일 만드는게 컴파일
	-컴파일언어		(정답)
	-인터프리터 언어
	-마크업 언어

6. 소스 코드를 한 줄씩 읽어서 기계어로 변환하여 실행하는 언어는?	-한줄씩 기계어로 변환하여 실행하는 언어를 인터프리터
	-컴파일 언어
	-인터프리터 언어		(정답)
	-마크업 언어


java 2주차
1. 주석에 대한 설명으로 옳은것을 모두 고르세요
	-comment		(정답)
	-한줄주석//		(정답)
	-여러줄 주석 /**/		(정답)
	-프로그램의 일부로 컴파일 됨

2. 자바 프로그램의 동작을 명시하고 이러한 동작을 컴퓨터에 알려주는 데 사용되는 문장은 무엇인가요?
	-statement		(정답)
	-class
	-package
	-project

3. 서로 관련된 클래스의 모음으로 기능을 기반으로 클래스를 구성하는데 사용되는 것은?
	-statement
	-class
	-package			(정답)
	-project

4. 모든 자바 애플리케이션의 시작점이자 진입점에 해당하는 메서드의 이름을 쓰세요
	정답-main

5. JDK를 설치할 때 포함된 javac 등 도구를 어느 곳에서든 사용할 수 있게 하려면 무엇을 변경해야 하는가?
	-환경변수		(정답)
	-작업공간
	-Extension
	-Plug-in

6. 변수 이름으로 사용할 수 있는 것을 모두 고르세요
	-byte		자바키워드 "byte"는 변수로 사용 할 수 없다
	-batman_1		(정답)
	-doublePlus		(정답)
	-$value			(정답)
	-_name			(정답)
	-2nd		변수이름은 숫자로 시작하면 안됨

7. 각 줄의 내용이 맞는지 여부를 선택하세요
	-hello와 HeLLo는 동일한 변수이다		-false
	-모든 자바 실행문은 세미콜론(;)으로 끝난다	-true
	-//는 여러 줄 주석의 시작기호 이다		-false

8. 각 행의 값의 자료형을 선택하세요
	-true - boolean
	-50 - int
	-'m' - char
	-"memo" - String
	-50.0 - double

9. 상수를 선언하기 위한 키워드를 쓰세요
	-final

Java 3주차
1.각 행의 설명에 맞는 System.out객체의 메소드를 선택하세요
	-내용을 출력한 후 행을 바꾼다. 커서를 다음 행의 시작 부분으로 이동한다. 	-println()
	-내용을 출력만 하고 행은 바꾸지 않는다. 				-print()
	-문자열의 포맷을 지정해서 출력한다. 					-printf()

2~3. 다음 코드를 보고 질문에 답하세요
int a = 7, b = 15;
// 1번 코드
System.out.println(a + " + " + b + " = " + a + b);
// 2번 코드
System.out.println(a + " + " + b + " = " + (a + b));

2. 1번 코드의 출력은 다음과 같다. ? 부분에 출력될 내용을 쓰세요.
	- 715(문자열 연결해주는 연산자인 +가 먼저 실행 되기때문에 7과 15를 이어준 715가 출력

3. 2번 코드의 출력은 다음과 같다. ? 부분에 출력될 내용을 쓰세요.
	-22(괄호로 표시한 부분에서 정수형 변수 두개를 더해주는 연산자가 먼저 실행되기때문에 22로 출력)

4. System.out.println("java[?]Program"); 코드가 실행 결과가 다음과 같이 출력하도록 하기 위해 [?]부분에 추가해야하는
   escape character를 쓰세요.
	-\n

5~7. 다음의 코드를 보고 질문에 답하세요.
int x = 15;
System.out.println(x < 10 && x < 20);     // 1번 코드
System.out.println(x < 10 || x < 20);        // 2번 코드
System.out.println(!(x < 10 && x < 20));  //3번 코드

5. 1번코드 실행결과
	- &&논리 연산자는 모두 만족할때 true 아니면 false x는 10보다 크고 20보다 작으니까 둘 다 만족 못해서 false
6. 2번코드 실행결과
	- ||논리 연산자는 하나만 만족하면 true, 모두 만족 못해야 false. x는 10보다 작지는 않지만, 20보다는 작으므로 true
7. 3번코드 실행결과
 	- &&논리 연산자로 봤을때 x<10부분이 만족하지 않아서 false가 나오는데 ()앞에 !부정을 나타내는 논리연산자가 잇어서 true로 바뀜

8~9. 다음 코드를 실행한 후의 변수 x와y의 값을 쓰세요.
int x = 10;
int y = x++;
y += ++x;

8. x에 들어있는 값
	- 12 
	x=10 x값에 10대입
	y = x++ y값에 10을 대입하고 그 뒤에 x값에 ++해줌
	y += ++x x값에 1을 먼저 더한 후에 그 값을 y값에 더해서 y값에 대입
	x에 1을 두번 더했기 때문에 x는 12가 됨

9. y에 들어있는 값
	- 22
	x=10;		x값에 10 대입
	y = x++;		y값에 x값에 있는 10대입 후 x값에 ++ (y는 10, x는 11)
	y += ++x;	x값에 ++ 해 준 후 y값에 x값을 더해서 y값에 대입	(x는 12, y는 22)

Java 4주차
1.다음 문장이 맞는지 true, false를 선택하세요
	-&&는 AND 연산자로 논리 연산을 하는데 사용한다			-true
	-byte 타입의 연산 결과는 항상 byte 타입이다				-false
	-x > y가 true이거나 a < b가 true라면, x > y && a < b도 true이다		-false
	-모듈로 연산자(%)는 double 타입도 사용할 수 있다			-false

2. 행주석(한줄 comment)의 시작을 나타내는 기호를 쓰세요
	- //
3. 다음 실행문 중 잘못된 것을 모두 고르세요
	- long x = 100;		- 정수형 long 이라 가능
	- char c = "a";		-char는 ''로 감싸야됨
	- float f = 100.0;		-실수형은 보통 double로 간주함 float로 할거면 float f = 100.0f;라고 해야됨
	- double d = (double)100;	-가능
	- byte b = 300;		-byte는  -128부터 127까지 표현가능해서 잘못된 표현

4~6. 다음 코드의 실행 결과를 쓰세요
int x = 1, y = 2;
System.out.println(x++);   // 1번 코드
System.out.println(++x + y--);  // 2번 코드
System.out.println(++x / 3 + x * ++y)  // 3번 코드

4. 1번코드의 결과
	- 1 	x++는 x값을 먼저 출력하고 ++함
5. 2번코드의 결과
	- 5	이전 시행에서 x에 1 더했으니까 x는 2 여기서 ++x니까 다시 먼저1더하고 적용 x=3, y는 y--니까 y값을 먼저 쓰고 그다음에 계산 그래서 3+2가됨
6. 3번코드의 결과
	- 9	++x니까 x는 4 ++y니까 이전에 1뺀값에서 다시 1더하고 계산 y는 2 그러면 4/3 + 4*2 답은 9

7. 아래의 코드와 같이 형변환이 가능하면 변환 결과를 쓰고, 가능하지 않다면 false를 쓰세요.
	float f = 3.14f;
	int i = (int)f;
	-결과 3 		실수형 변수를 정수형으로 명시적 형변환 하는중 형변환 할때 소수점 아래는 날라감

8. 아래의 코드와 같이 형변환이 가능하면 변환 결과를 쓰고, 가능하지 않다면 false를 쓰세요. 문자 a의 정수값은 97이다.
	int i = 100;
	char c = (char)i;
	-결과 d 		a가 97이면 b98 c99 d100

9. 아래의 코드와 같이 형변환이 가능하면 변환 결과를 쓰고, 가능하지 않다면 false를 쓰세요.
	int i = 1;
	boolean b = (boolean)i;
	-결과 false	boolean으로 형변환은 안됨

Java 5주차
1. 다음 중 제어문의 종류가 아닌 것은?
	- 분기문
	- 선언문		선언문은 제어문이 아님~_~
	- 조건문
	- 반복문

2. 두 실행문의 결과가 같은지, 다른지 판단하세요
[ 첫번째 실행문 ]
if (a < 1)		a가 1보다 작으면 b는 1, a가 1보다 작지않으면(크거나 같으면) 다시 a가 3보다 작은지 조사하고 3보다 작으면 2 3보다 크거나 같으면 결과없음
   b = 1;
else if (a < 3)
   b = 2;

[ 두번째 실행문 ]
if (a < 1)		a가 1보다 작으면 b는 1, a가 1보다 크거나 같으면(작지 않으면) a가 1보다 크거나 같고 a가 3보다 작은지 조사 참이면 b는 2 아니면 결과없음
   b = 1;		
else if (a >= 1 && a < 3)
   b = 2;

		첫번째 실행에서 else if 로 넘어갈때와 두번째 실행에서 elseif 부분에서 조사하는 부분이 겹치기 때문에 a<3에 의해서 결과가 결정됨 그래서 같은 결과가 나옴
- 결과는 같다.

3. switch문에서 조건을 만족하는 case 레이블이 없을 경우에 실행될 코드블럭을 지정하는 레이블의 키워드를 쓰세요.
	-default

4. 다음의 switch문을 수행한 후 b의 값을 쓰세요.
int a = 1, b = 2;
switch (a++) {		
    case 1 : b += a;
    case 2 : b += 5;
}
-결과 9		a++니까 우선 a는 1, case 1로 이동하면서 a++해주면서 a에는 2,  b에 a값을 더해서 b에 저장 b는 4, break없으니까 다음 case실행 b에 5더하기, 따라서 b는 9 

5. 다음은 변수 num의 숫자가 짝수인지 홀수인지 출력하는 조건문이다. ()에 들어갈 조건식을 쓰세요.
if (             )
    System.out.println("짝수");
else
    System.out.println("홀수");

- num % 2 == 0		-2로 나누어 떨어지면 짝수 아니면 홀수니까 if아래에 짝수가 나오니까 참인 결과일때 짝수 따라서 나머지가 0인 조건을 넣어줘야함

Java 6주차
1. 다음중 for루프의 구문은 무엇인가?
	- for (int x = 0; x < 5; x++)  -(정답)
	- for (int x; x < 10; x--)
	- for (int x = 10; x = x+5)
	- for (int x < 4, x++)

2. 다음 프로그램의 실행 결과는?
public static void main(String[] args) {
    for (int i = 0; i < 10; i++)
         System.out.print(i + " ");
    System.out.println();
} 
결과 - 0 1 2 3 4 5 6 7 8 9 

3. 다음 프로그램의 실행 결과를 작성하세요
for (int i = 1; i < 3; i++)
    for (int j = 1; j < 3; j++)
        System.out.print(i + "  " + j + " / "); 
결과 - 1 1 / 1 2 / 2 1 / 2 2 /

4. 다음 코드의 실행 결과는?
int sum = 0;
for (int i = 1; i < 6; i += 2)
       sum += i;
System.out.println(sum);
결과 - 9 		i가 1 3 5 되고 그 값을 더해서 sum을 출력

5. 반복문 중 반복 실행문을 우선 실행하고 조건식을 확인하는 것은?
	-while
	-for
	-do~while		-(정답) do에서 먼저 실행하고 while(여기서 반복할지 결정)
	-switch

6. 메서드를 사용하는 이유로 옳지 않은 것은?
	- 메서드는 비슷한 성격의 작업을 묶을 수 있다. 
	- 메서드는 반복 코드를 줄이기 때문에 읽기가 어렵다. 아님 읽기 쉬워짐(읽기 쉽대..이해안됨 어려운뎅) 
	- 코드를 중복해서 작성하지 않아도 되므로 재사용성이 향상된다. (메소드 만들고 기능 사용할때마다 선언하면 다시 쓸 수 있어서 좋음)
	- 코드를 더 쉽게 유지할 수 있고, 변경이 필요할 때 쉽게 리팩토링 할 수 있다.(ㅇㅇ)

7. 사용자 정의 메서드에 대한 설명으로 옳은 것을 모두 고르시오.
	- 반환유형이 있는 메서드는 반드시 return이 있어야 한다 (정답)
	- 반환 유형이 있는 메서드는 메서드 앞에 자료형을 붙여야 한다(정답)
	- 반환 유형이 있는 메서드는 return이 없다(ㄴㄴ 있음)
	- 반환 유형이 있는 메서드는 메서드명 앞에 반드시 void를 붙여야 한다(void는 반환유형 없을때 해야함)

8. 메서드 오버로딩에 대한 설명으로 옳은 것을 모두 고르시오.
	- 메서드명이 같지만 매개변수가 다른 메서드 		(정답)
	- 메서드명이 같지만 매개변수의 자료형이 다른 메서드	(정답)
	- 메서드명이 같지만 매개변수의 개수가 다른 메서드 	(정답)
	- 메서드명이 같지만 매개변수의 자료형과 개수가 같은 메서드 (아님) 

9. return값이 없는 메서드의 메서드 명 앞에 추가하는 키워드를 쓰시오.
	-void

10 ~ 13. 다음 실행 결과를 참고하여 프로그램을 완성하시오
<실행 결과>
3
입력된 숫자 : 3

<프로그램>
static _________ inputMethod() {    // 1번 문제
    Scanner sc = new Scanner(System.in);
    int num = sc.nextInt();
    return num;

static _________ display(int a) {     // 2번 문제
    System.out.println("입력된 숫자 : " + a);
}

public static void main(String[] args) {
    int a = ________________;   // 3번 문제
    ______________;                  // 4번 문제
}

10. 위의 프로그램에서 1번에 들어갈 코드를 쓰세요
	- int 		return값이 정수형이니까 메소드의 자료형도 int
11. 위의 프로그램에서 2번에 들어갈 코드를 쓰세요
	- void 		return값이 없으니까 void
12. 위의 프로그램에서 3번에 들어갈 코드를 쓰세요
	-inputMethod()	main에서 정수형 변수 a에 입력받은 값을 대입 하기 위해서는 inputMethod()의 return값이 필요
13. 위의 프로그램에서 4번에 들어갈 코드를 쓰세요
	-display(a)		입력받은 값을 보여주기 위해서는 파라미터로 int자료형을 받는 display(a) 메소드가 필요 a는 위에서 입력받은 값

Java 7주차
1. 다음 중 문자열을 연결하는 + 연산자와 같은 문자열 메서드를 고르시오
	- substring()	- 문자열에서 지정된 범위의 부분 문자열을 추출하여 반환함 index를 사용하여 시작위치랑 끝위치 지정 가능
	- concat()	(정답)	- 문자열에 다른 문자열을 이어붙여 새로운 문자열을 반환합니다. 일반적으로 '+'연산자와 유사한 역할을 함
	- compareTo()	- 문자열을 비교하여 두 문자열이 동일한지를 확인. 두 문자열을 사전적으로 부교하여 첫번째로 서로다른 문자의 유니코드 값 차이를 반환
	- trim()		- 문자열의 앞뒤에 있는 공백을 제거한후 새로운 문자열을 반환. 공백은 공백문자 탭 개행 다 포함

2. 다음 프로그램의 실행 결과는 무엇인가?
public static void text(int a, String b) {
   System.out.println(a + b);
}

public static void main(String[] args) {
   text(1, " JavaBook");
}
- 결과 1 JavaBook

3. 다음 반복문을 실행했을 때 sum값은?
int sum = 0;
for (int i = 0; i < 5; i++) {
    if (i % 3 == 0) continue;
    sum += i;
}
-결과 7		i값이 0 1 2 3 4 순서로 진행되는데 3으로 나눈 나머지가 0이면 더하지 않고 다시 조건확인(continue) 그래서 sum에 0 1 2 4 값을 더함

4. 배열에 대한 코드이다. 문법적으로 틀린 것은?
	- int[] arr = {1,2,3};
	- int arr[3] = {1,2,3};		배열을 선언할때 크기 지정 안함
	- int[] arr; arr = new int[]{1,2,3};
	- int arr[];

5. 다음 중 문법적으로 틀린 것은?
	- String s1 = new String("1");
	- String s1 = "1";
	- String s1 = "1", s2 = "2";
	- String s1 = '1';		String은 ""로 해야됨

6. String 타입의 변수 s에 포함된 문자 개수를 알려면?
	- s.size
	- s.size()
	- s.length		배열에 사용하는건 길이
	- s.length()	String에 사용하는건 메소드니까 ()생김

7. 다음 코드에 대해 실행 결과가 true인 것을 모두 고르시오.
	- String s1 = new String("안녕");  	
	- String s2 = new String("안녕");
	- String s3 = "안녕";
	- String s4 = "안녕";
	
	- s1 == s2	s1과 s2는 각각 다른 new String()으로 생성된 객체를 가리키고 있음. java에서는 객체의 주소비교는 == , 내용비교는 .equal 다른 객체라 주소가 달라서 false
	- s3 == s4	둘다 문자열 리터럴 "안녕"을 가리키고 있음. 문자열 리터럴이 동일한 경우 같은 문자열 리터럴을 공유해서 ==비교는 true됨
	- s1.equals(s2)	s1 s2는 객체로 생성해서 다른 객체를 가리킴 그치만 equals()로 내용비교를 하면 내용이 동일해서 true됨
	- s3.equals(s4)	s3 s4는 둘다 문자열 리터럴 "안녕"을 가리킴. 그래서 ==값도 되고 equals()로 내용비교를 해도 true가 됨

8. 다음 코드의 실행 결과는?
System.out.println(new String("자바 프로그래밍 기초").substring(2,9).trim());
	-결과 프로그래밍

9. 다음 코드의 실행 결과는?
boolean b = 1 == 2;
System.out.println("java " + b + "1");
	-결과 java false1
