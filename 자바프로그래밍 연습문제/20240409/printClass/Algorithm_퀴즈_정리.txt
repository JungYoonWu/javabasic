알고리즘_퀴즈_정리

1주차
1. 컴퓨터에서 문제를 해결하기 위한 절차를 나타내는 용어를 쓰세요.
	-알고리즘

2. 알고리즘 표현법 중 프로그램 코드와 일반 언어의 중간 형태로 표현하는 것은?
	- 일반언어 
	- Flowchart 
	- Pseudo Code		-(정답) 
	- Program Code 

3. 자료를 효율적으로 사용할 수 있도록 구성하고 저장하는 방법을 나타내는 용어는?
	- Algorithm
	- Data Structure		-(정답) 자료구조를 통해 자료를 효율적으로 사용할수 있게 구성하고 저장한다
	- Coding
	- Program

4. 알고리즘을 실행가능한 형태로 구현한 것을 나타내는 용어를 쓰세요.
	- 프로그램, Program, program

5. 알고리즘 표현법 중 여러 종류의 상자와 상자를 이어주는 화살표를 이용해서 명령 순서를 표현하는 방식은?
	- 일반 언어
	- Flowchart	(정답)
	- Pseudo Code
	- Program Code

2주차
1.프로그램을 실행하면 메모리에 loading된다. 이 때 메모리에 loading프로그램을 무엇이라고 하는가?
	- program
	- processor
	- process		(정답)
	- data

2. 프로그램 실행했을 때 데이터를 일시적으로 저장하기 위해 할당하는 자동 메모리 영역은?
(함수 내에서 선언한 변수에 메모리 할당 등)
	- stack		(정답)
	- code
	- heap
	- data

3. 프로그램 실행 중에 메모리를 할당하는 자유 저장소에 해당하는 영역은?
(자바에서 new등으로 객체를 생성하여 할당하는 메모리)
	- stack
	- code
	- heap		(정답)
	- data

4. 프로그램이 실행 중에 할당되는 메모리 구조이다. 각 영역의 명칭을 선택하세요.
----------
1.	- stack
----------


----------
2.	- heap
----------
3.	- data
----------
4.	- code
----------

5. 자바 프로그램의 메모리 구조이다. 각 영역에 맞는 명칭을 모두 선택하세요.
----------
1. 	- StackArea, JVM Stack Area
----------
||
V

^
||
----------
2.	- Heap Area
----------
3.	- Static Area, Method Area
----------

6. 변수 유형과 자료형에 따른 변수가 위치하는 메모리 영역을 모두 고르시오.
인스턴스 변수		- Heap Area
지역 변수			- Stack Area
정적 변수			- Static Area
기본 타입 변수		- Stack Area
참조 타입 변수		- Stack Area
참조 타입 변수의 객체	- Heap Area

3주차
다음은 세개의 숫자 중 최대값을 구하는 알고리즘을 순서도로 표현한 것이다.
1~4에 들어갈 조건값을 선택하세요.

1.
입력 a,b,c 
max = a
b> max ->true->max = b
   |
  V false
c > max ->true->max = c
   |
   V false
출력 max

2.다음은 입력된 숫자의 홀짝을 판단하는 알고리즘을 순서도로 표현한 것이다. 1,2에 들어갈 결과를 선택하세요.

	|
	V
false<-값%2==0 ->true
1.		2.
2로 나눈 나머지값이 0이면 짝수 아니면 홀수 
1. 홀수 	2. 짝수

3. 다음 중 제어문에 대한 설명으로 옳지 않은 것을 고르시오.
	- 조건문은 조건에 따라 처리하는 명령을 달리하는 문장이다
	- 반복문은 일정한 조건이 충족될 때까지 동일한 명령을 반복적으로 처리하는 문장이다
	- 분기문은 강제로 명령을 종료하는 문장이다					(정답) 
	- 제어문은 프로그램을 구성하는 코드가 실행될 때 코드의 순서를 변경할 수 있는 문장이다
분기문은 프로그램의 실행 흐름을 특정 조건에 따라 변경하는 문장, 강제로 종료하는거랑 다름

4.구조적 프로그래밍의 기본 구조에 대한 설명에 맞는 구조를 선택하시오
반복구조 - 주어진 조건에 따라 주어진 명령을 반복 처리하는 구조
순차구조 - 프로그램이 표현된 순서대로 실행되도록 하는 구조
선택구조 - 주어진 조건의 참/거짓 결과에 따라 분기 또는 선택하는 구조

5.반복구조의 순서도
        1.
       ----조건      <------
       |	  | 2.	       |
       |	 V	       |
       |	반복 실행문s ---
       |
       --> 다음 실행문
1. false	2. true

6. 숫자를 입력받아서 계속 더하다가 0이 입력되면 멈추고 지금까지 더한 결과를 출력하는 순서도에서
입력받은 숫자가 0인지아닌지 조건을 확인하는 조건식을 쓰시오.
	- number != 0

4주차
1. Scanner보다 입력 처리가 빨라서 반복적인 입력처리에 유리한 클래스를 쓰세요
	-BufferedReader

2. 다음의 문장에 대해 true, false를 선택하시오
Scanner는 입력받는 자료형이 다양하다					- true
BufferedReader는 입력 받는 자료형이 다양하다				- false(String)
Scanner는 Space와 Enter 단위로 입력을 받는다				- true
BufferedReader는 Enter 단위로 입력을 받는다				- true
Scanner를 사용하여 입력받는 데이터는 가공 작업이 많이 필요하다		- false
BufferedReader를 사용하여 입력받는 데이터는 가공작업이 많이 필요하다	- true

3. 다음은 BufferedReader를 사용하여 키보드로부터 입력을 받기 위해 BufferedReader 객체를 생성하는 문장이다.
괄호안에 들어갈 내용을 쓰세요
BufferedReader br = new BufferedReader(---------------);
- new InputStreamReader(System.in)

4. 출력할 결과를 하나의 문자열로 저장한 후 한 번에 출력하려고 한다. 
출력한 결과를 하나의 문자열로 저장할 때 사용하는 클래스를 쓰시오.
- StringBuilder  (append()로 이어주면됨!!)

5. 다음의 설명에 맞는 메서드를 선택하시오.
Scanner 객체를 사용하여 한 줄을 String형으로 읽는다		-nextLine()
BufferedReader객체를 사용하여 한 줄을 String으로 읽어온다		-readLine()
Scanner 객체를 사용하여 한 줄을 정수형으로 읽어온다		-nextInt()
Scanner객체를 사용하여 공백까지의 입력을 String으로 받아온다	-next()

6.다음은 inStr을 공백 단위로 읽어와서 정수형으로 변환하는 코드이다.  
1번 ~ 3번에 들어갈 코드를 쓰시오.
String inStr = "30 50";
----(1)---- st = new ----(1)----(inStr, " ");
int a = ----(2)----(st.----(3)----);
int b = ----(2)----(st.----(3)----);
(1) StringTokenizer, (2) Integer.parseInt, (3)nextToken()

5주차
1. 메모리의 연속 공간에 값이 채워져 있는 형태의 자료구조를 영어로 쓰세요(소문자로만)
	-array
2.다음 중 옳은 것을 모두 고르시오.
	- 배열은 index를 통해 참조할 수 있다		(정답)
	- 배열의 index는 1부터 시작한다		ㄴㄴ 0부터
	- 새로운 값을 중간에 삽입하기 용이하다		ㄴㄴ 개불편함
	- 배열의 크기는 선언하거나 생성할 때 지정하여 이후에 크기를 늘리거나 줄일 수 없다	(정답)
	- 배열은 각 요소를 배열변수{index}의 형태로 접근한다	아니래
	- 배열변수에는 배열 객체가 저장된다.	배열변수에는 객체의 주소값(참조할 수있는거)이 저장됨

3. 다음은 입력 받은 배열에 저장된 숫자 중 가장 작은 수를 구하는 메서드이다. 1~4번에 들어갈 코드를 쓰시오.

int maxOf(int[] numArr) {
    int min = numArr[0];
    for (int i = 1; i < numArr.____(1)____; ____(2)____) {
        if (numArr[i] ___(3)___ min)  min = numArr[i];
     ____(4)_____   min;
}
(1)length  (2)i++  (3)<  (4) return

4. 다음은 주어진 숫자를 16진수로 변환하는 메서드이다. 1~5번에 들어갈 코드를 쓰시오
int cardConv16(int number, char[] radix16){
	int numDigit = 0;
	while(____(1)____){
		radix16[____(2)____] = number ____(3)____ 16;
		number____(4)____ 16;
	}
____(5)____}
(1)number > 0 (2)numDigit++ (3)% (4)/= (5)return numDigit

5.다음은 주어진 숫자가 소수인지를 판단하는 메서드이다. 1 ~ 6번에 들어갈 코드를 쓰시오.

___(1)____  isPrimeNumber(int number) {
   for (int i = ___(2)___; i <= ___(3)___; i++) {
        if (____(4)____ == 0) return ___(5)___;
   return ____(6)____;
}
(1)boolean (2)2 (3)number-1 (4)number%i (5)false (6)true